#pragma checksum "C:\Users\usuario\Desktop\Nueva carpeta\CalculinWebCore\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7aeb8177c223e5dd09e05aa1c30584c1213954d2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\usuario\Desktop\Nueva carpeta\CalculinWebCore\Views\_ViewImports.cshtml"
using CalculinWebCore;

#line default
#line hidden
#line 2 "C:\Users\usuario\Desktop\Nueva carpeta\CalculinWebCore\Views\_ViewImports.cshtml"
using CalculinWebCore.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7aeb8177c223e5dd09e05aa1c30584c1213954d2", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cdaab89300886c1cf4adc58422f2902e6b8f9bb0", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\usuario\Desktop\Nueva carpeta\CalculinWebCore\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 2883, true);
            WriteLiteral(@"<div class=""row jumbotron"">
    <div>
        <p>
            Desarrolla una aplicación web de conversión de divisa utilizando cualquier API gratuito de conversión (por ejemplo:  <a href=""http://currencyconverter.kowabunga.net/converter.asmx"">currencyconverter</a> , <a href=""https://1forge.com/forex-data-api"">Forex</a>, <a href=""https://free.currencyconverterapi.com/"">currencyconverterapi</a> ).
        </p>
        <p>
            La página web principal de la aplicación solicitará al usuario que introduzca un importe, la divisa de origen y la divisa de destino y deberá devolver el resultado de la conversión utilizando el cambio correspondiente a la fecha y hora del momento en el que se realiza la petición.
        </p>
        <p>
            De forma opcional se podrán implementar las siguientes funcionalidades adicionales: Registro y autenticación de los usuarios. Los usuarios deberán autenticarse para poder acceder a la pantalla principal de la aplicación para la consulta del tiempo. Para ello l");
            WriteLiteral(@"os usuarios podrán registrarse previamente rellenando un formulario sencillo.
            Los datos para el registro del usuario deberán incluir como mínimo correo electrónico (con validación de formato RFC), contraseña, fecha de nacimiento (con validación de fecha válida) y país (con listado seleccionable de países). Desde la pantalla principal se dará la funcionalidad de hacer logout.
            Almacenamiento y consulta de las últimas consultas (historial). En la pantalla principal también se mostrarán las 10 últimas consultas realizadas por el usuario y sus resultados.
        </p>
        <p>
            Como mínimo:Crea una aplicación web .net. Almacena tu código en tu cuenta de Github e incluye documentación sobre cómo compilar o ejecutar tu proyecto si es necesaria.
            Como base de datos puedes utilizar almacenamiento cloud gratuito <a href=""https://www.mongodb.com"">(Mongodb)</a> o SQLite.
            El código debe funcionar y como mínimo debe implementarse la página principal con la");
            WriteLiteral(@" funcionalidad de conversión de divisa. Es suficiente con que las páginas tengan un interfaz web básico, no elaborado.
        </p>
        <p>
            Puntos extra:
        </p>
        <ul>
            <li>
                <p>
                    Desarrollar las funcionalidades extra de registro de usuarios e historial.
                </p>
            </li>
            <li>
                <p>
                    Utilizar Bootstrap.
                </p>
            </li>
            <li>
                <p>
                    Usar un framework Javascript moderno para la presentación de datos.
                </p>
            </li>
            <li>
                <p>
                    Implementar pruebas unitarias.
                </p>
            </li>
        </ul>
    </div>
</div>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
